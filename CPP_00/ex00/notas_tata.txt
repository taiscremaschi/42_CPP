Cada instrução em C++ é chamada de sentença. Sentenças simples são terminadas com um ponto e vírgula.
Usando chaves, podemos agrupar sentenças em blocos, chamados de sentenças compostas.
Exemplos de sentenças incluem:
• Simples:
x = 3;
• Composta:
{
i = 3;
cout << i << endl;
i = i + 1;
}

char 8 -128 a 127
bool 8 true ou false
int 32 -2.147.483.647 a 2.147.483.647
float 32 7 dígitos significativos
double 64 15 dígitos significativo


cout é a mesma coisa que o printf mas é mais seguro 
formart é uma biblioteca

int x = 1
int y =x 
int *p = &x
y = *p


se x = 73
y = 73
p = 73

int x = 1
ip = &x
&y =x

se y 42 mudo tudo pq mudei o endereço de y
x =42
p =42



auto s =  x > y ? "yes" : "no" (mesma coisa que um if)

count << formart (" {} <- isso é o 1 parametro", i)

a diferença entre classes e estrutura é que a classe  tem como 
padrao a associação privada e contem membros de funcao bem como
membros de dados. uma classe pode ser escrita como struct 


um union é um conteine de objetos sobrepostos posso  usar  o mesm
conteiner armazane obejtos de diferente tipos ao mesmo tempo em que 
reutiliza  o mesmo  espaço



enum contem um conjuto especifico de valores enumerados
com nomes
exemplo: enum Color {red, green, blue};
Color x = green;


float 8 dígitos
numero decimal com ponto. 

auto sempre precisa ter um sinal de igual 
char *s
auto x = s